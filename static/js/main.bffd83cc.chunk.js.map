{"version":3,"sources":["components/AgesButton/index.js","components/Container/index.js","components/NamesButton/index.js","components/Navbar/index.js","components/SearchForm/index.js","App.js","index.js"],"names":["AgesButton","props","onClick","cb","className","Container","children","NamesButton","Navbar","href","SearchForm","name","age","occupation","location","App","state","friends","sortNames","sort","a","b","setState","console","log","sortAges","this","map","friend","Component","ReactDOM","render","document","getElementById"],"mappings":"m5CAgBeA,MAbf,SAAoBC,GAGhB,OAEI,4BACIC,QAASD,EAAME,GAAIC,UAAU,mBADjC,gBCDOC,MAJf,SAAmBJ,GACjB,OAAO,yBAAKG,UAAU,aAAaH,EAAMK,WCY5BC,MAbf,SAAqBN,GAGjB,OAEI,4BACIC,QAASD,EAAME,GAAIC,UAAU,kBADjC,iBCMOI,MAXf,WACE,OACE,yBAAKJ,UAAU,iDACb,uBAAGA,UAAU,eAAeK,KAAK,KAC/B,qD,MC4BOC,MA1Bf,SAAoBT,GAElB,OACE,yBAAKG,UAAU,QAEb,yBAAKA,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BH,EAAMU,MAEhC,4BACE,wCADF,IACyBV,EAAMW,KAE/B,4BACE,+CADF,IACgCX,EAAMY,YAEtC,4BACE,6CADF,IAC8BZ,EAAMa,c,OC4B/BC,E,4MA3CbC,MAAQ,CACNC,W,EAGFC,UAAY,WAEV,IAAID,EAAU,EAAKD,MAAMC,QAAQE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAET,KAAOU,EAAEV,KAAQ,GAAK,KAGzE,EAAKW,SAAS,CAAEL,YAChBM,QAAQC,IAAI,U,EAGdC,SAAW,WACTF,QAAQC,IAAI,UACZ,IAAIP,EAAU,EAAKD,MAAMC,QAAQE,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAER,IAAMS,EAAET,IAAO,GAAK,KACtE,EAAKU,SAAS,CAAEL,a,uDAOhB,OACE,kBAAC,EAAD,KAEE,kBAAC,EAAD,qBACA,kBAAC,EAAD,CAAad,GAAIuB,KAAKR,YAHxB,IAGqC,kBAAC,EAAD,CAAYf,GAAIuB,KAAKD,WAEvDC,KAAKV,MAAMC,QAAQU,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACEjB,KAAMiB,EAAOjB,KACbC,IAAKgB,EAAOhB,IACZC,WAAYe,EAAOf,WACnBC,SAAUc,EAAOd,mB,GApCXe,a,MCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bffd83cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction AgesButton(props) {\r\n    // console.log(props)\r\n    \r\n    return (\r\n\r\n        <button\r\n            onClick={props.cb} className=\"btn btn-success\">\r\n            Sort by Age\r\n        </button>\r\n\r\n    );\r\n}\r\n\r\nexport default AgesButton;\r\n\r\n//onClick={props.sortAges}","// act 23\r\nimport React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\n\r\nfunction NamesButton(props) {\r\n    // console.log(props)\r\n\r\n    return (\r\n\r\n        <button\r\n            onClick={props.cb} className=\"btn btn-danger\">\r\n            Sort by Name\r\n        </button>\r\n\r\n    );\r\n}\r\n\r\nexport default NamesButton;\r\n\r\n//","import React from \"react\";\r\n// import SearchForm from \"../SearchForm\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        <h1>Employee Directory</h1>\r\n      </a>\r\n      {/* <SearchForm /> */}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","// activity 23\r\n// src/components/SearchForm\r\n\r\nimport React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\n\r\n\r\nfunction SearchForm(props) {\r\n  // console.log(props)\r\n  return (\r\n    <div className=\"card\">\r\n      \r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Age:</strong> {props.age}\r\n          </li>\r\n          <li>\r\n            <strong>Occupation:</strong> {props.occupation}\r\n          </li>\r\n          <li>\r\n            <strong>Location:</strong> {props.location}\r\n          </li>\r\n        </ul>  \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\nimport AgesButton from \"./components/AgesButton\";\nimport Container from \"./components/Container\";\nimport NamesButton from \"./components/NamesButton\";\nimport Title from \"./components/Navbar\";\nimport SearchForm from \"./components/SearchForm\";\nimport friends from \"./friends.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  sortNames = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    let friends = this.state.friends.sort((a, b) => (a.name > b.name) ? 1 : -1)\n      //.map((item, i) => <SearchForm key={i} data={item} />);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n    console.log(\"hello\")\n  };\n\n  sortAges = () => {\n    console.log(\"HELLLO\")\n    let friends = this.state.friends.sort((a,b) => (a.age > b.age) ? 1 : -1)\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a SearchForm component for each friend object\n  render() {\n    //console.log(this.state.friends.sort((a, b) => (a.name > b.name) ? 1 : -1))\n    // .map(data => data.name)\n    return (\n      <Container>\n      \n        <Title>Friends List</Title>\n        <NamesButton cb={this.sortNames}/> <AgesButton cb={this.sortAges}/>\n        \n        {this.state.friends.map(friend => (\n          <SearchForm\n            name={friend.name}\n            age={friend.age}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n        \n        </Container>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();"],"sourceRoot":""}